/**
 * @file nlink.h
 * @brief Unified header for NexusLink dynamic component linkage system
 * @version @NLINK_VERSION@
 * 
 * This header provides access to all NexusLink functionality.
 * 
 * Copyright (c) 2025 NexusLink Team
 */

#ifndef NLINK_H
#define NLINK_H

#ifdef __cplusplus
extern "C" {
#endif

/* Core components */
#include <nlink/core/nlink.h>

/* Common utilities */
#include <nlink/core/common/nexus_core.h>
#include <nlink/core/common/result.h>
#include <nlink/core/common/types.h>

/* Symbol management */
#include <nlink/core/symbols/nexus_symbols.h>
#include <nlink/core/symbols/registry.h>

/* Version management */
#include <nlink/core/versioning/nexus_version.h>
#include <nlink/core/versioning/semver.h>

/* Component minimization */
#include <nlink/core/minimizer/nexus_minimizer.h>
#include <nlink/core/minimizer/okpala_automaton.h>

/* Pipeline system */
#include <nlink/core/pipeline/nlink_pipeline.h>

/* Multi-pass system */
#include <nlink/core/mpsystem/mps_pipeline.h>

/* Single-pass system */
#include <nlink/core/spsystem/sps_pipeline.h>

/* Pattern matching */
#include <nlink/core/pattern/matcher.h>

/* CLI functionality (if CLI support is enabled) */
#ifdef NLINK_ENABLE_CLI
#include <nlink/cli/command.h>
#include <nlink/cli/command_registry.h>
#endif

/**
 * Initialize the NexusLink system
 * 
 * This function must be called before any other NexusLink function.
 * It initializes all components and prepares the system for use.
 * 
 * @param config Path to a configuration file or NULL for default configuration
 * @return 0 on success, error code on failure
 */
int nlink_init(const char* config);

/**
 * Clean up and shut down the NexusLink system
 * 
 * This function should be called before the application exits to properly
 * clean up resources allocated by NexusLink.
 * 
 * @return 0 on success, error code on failure
 */
int nlink_shutdown(void);

/**
 * Get the NexusLink version string
 * 
 * @return A string containing the version information
 */
const char* nlink_get_version(void);

#ifdef __cplusplus
}
#endif

#endif /* NLINK_H */
