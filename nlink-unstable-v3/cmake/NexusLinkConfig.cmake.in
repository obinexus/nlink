# cmake/NexusLinkConfig.cmake.in
@PACKAGE_INIT@

include(CMakeFindDependencyMacro)
find_dependency(Threads REQUIRED)

# Define component imports
set(NLINK_LIBRARIES
    nlink::nlink_core
    nlink::nlink_cli_static
)

# Version information
set(NLINK_VERSION "@PROJECT_VERSION@")
set(NLINK_VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
set(NLINK_VERSION_MINOR "@PROJECT_VERSION_MINOR@")
set(NLINK_VERSION_PATCH "@PROJECT_VERSION_PATCH@")

# Component validation
include("${CMAKE_CURRENT_LIST_DIR}/nlink-targets.cmake")

# Verify core components
foreach(_comp nlink_core nlink_cli_static)
    if(NOT TARGET nlink::${_comp})
        set(NLINK_FOUND FALSE)
        set(NLINK_NOT_FOUND_MESSAGE "Required component '${_comp}' not found")
        return()
    endif()
endforeach()

set(NLINK_FOUND TRUE)


set(_NexusLink_OPTIONAL_COMPONENTS
    nlink_cli_static
    nlink_spsystem_static
    nlink_mpsystem_static
)

# Verify required components
foreach(_comp ${_NexusLink_REQUIRED_COMPONENTS})
    if(NOT TARGET nlink::${_comp})
        set(NexusLink_FOUND FALSE)
        set(NexusLink_NOT_FOUND_MESSAGE "Required NexusLink component '${_comp}' not found")
        break()
    endif()
endforeach()

# Check optional components
set(NexusLink_CLI_FOUND FALSE)
set(NexusLink_SPS_FOUND FALSE)
set(NexusLink_MPS_FOUND FALSE)

if(TARGET nlink::nlink_cli_static)
    set(NexusLink_CLI_FOUND TRUE)
endif()

if(TARGET nlink::nlink_spsystem_static)
    set(NexusLink_SPS_FOUND TRUE)
endif()

if(TARGET nlink::nlink_mpsystem_static)
    set(NexusLink_MPS_FOUND TRUE)
endif()

# Define interface library for simplified usage
if(NexusLink_FOUND AND NOT TARGET NexusLink::NexusLink)
    add_library(NexusLink::NexusLink INTERFACE IMPORTED)
    set_target_properties(NexusLink::NexusLink PROPERTIES
        INTERFACE_LINK_LIBRARIES "nlink::nlink_core"
        INTERFACE_INCLUDE_DIRECTORIES "${NexusLink_INCLUDE_DIR}"
    )
    
    # Add CLI support if available
    if(NexusLink_CLI_FOUND)
        set_property(TARGET NexusLink::NexusLink APPEND PROPERTY
            INTERFACE_LINK_LIBRARIES "nlink::nlink_cli_static"
        )
    endif()
endif()

# Helper macro for component checking
macro(nexuslink_check_component _component _var)
    if(TARGET nlink::${_component})
        set(${_var} TRUE)
    else()
        set(${_var} FALSE)
    endif()
endmacro()

# Diagnostic output
if(NOT NexusLink_FIND_QUIETLY)
    message(STATUS "Found NexusLink ${NexusLink_VERSION}")
    message(STATUS "  Include directory: ${NexusLink_INCLUDE_DIR}")
    message(STATUS "  Library directory: ${NexusLink_LIBRARY_DIR}")
    message(STATUS "  CLI support: ${NexusLink_CLI_FOUND}")
    message(STATUS "  SPS system: ${NexusLink_SPS_FOUND}")
    message(STATUS "  MPS system: ${NexusLink_MPS_FOUND}")
endif()

# Compatibility check
check_required_components(NexusLink)
